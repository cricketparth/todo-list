{"ast":null,"code":"var _jsxFileName = \"/Users/parthpathak/Documents/todo list/todo-list/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [list, setList] = React.useState([]);\n  const [todo, setTodo] = React.useState(\"\");\n  const [todoEditing, setTodoEditing] = useState(null);\n  const [editingText, setEditingText] = useState(\"\");\n  useEffect(() => {\n    const json = localStorage.getItem(\"list\");\n    const loadedlist = JSON.parse(json);\n\n    if (loadedlist) {\n      setList(loadedlist);\n    }\n  }, []);\n  useEffect(() => {\n    const json = JSON.stringify(list);\n    localStorage.setItem(\"list\", json);\n  }, [list]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const newTodo = {\n      id: new Date().getTime(),\n      text: todo,\n      completed: false\n    };\n    setList([...list].concat(newTodo));\n    setTodo(\"\");\n  }\n\n  function deleteTodo(id) {\n    let updatedlist = [...list].filter(todo => todo.id !== id);\n    setList(updatedlist);\n  }\n\n  function toggleComplete(id) {\n    let updatedlist = [...list].map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n\n      return todo;\n    });\n    setList(updatedlist);\n  }\n\n  function submitEdits(id) {\n    const updatedlist = [...list].map(todo => {\n      if (todo.id === id) {\n        todo.text = editingText;\n      }\n\n      return todo;\n    });\n    setList(updatedlist);\n    setTodoEditing(null);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"todo-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setTodo(e.target.value),\n        value: todo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), list.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"completed\",\n          checked: todo.completed,\n          onChange: () => toggleComplete(todo.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), todo.id === todoEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setEditingText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: todo.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-actions\",\n        children: [todo.id === todoEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => submitEdits(todo.id),\n          children: \"Submit Edits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTodoEditing(todo.id),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTodo(todo.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"7j/Ly3MQA6yJwdDrIleKt8R75+c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/parthpathak/Documents/todo list/todo-list/src/App.js"],"names":["React","useState","useEffect","App","list","setList","todo","setTodo","todoEditing","setTodoEditing","editingText","setEditingText","json","localStorage","getItem","loadedlist","JSON","parse","stringify","setItem","handleSubmit","e","preventDefault","newTodo","id","Date","getTime","text","completed","concat","deleteTodo","updatedlist","filter","toggleComplete","map","submitEdits","target","value"],"mappings":"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","sourcesContent":["import React ,{useState ,useEffect} from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [list, setList] = React.useState([]);\n  const [todo, setTodo] = React.useState(\"\");\n  const [todoEditing, setTodoEditing] = useState(null);\n  const [editingText, setEditingText] = useState(\"\");\n\n  useEffect(() => {\n    const json = localStorage.getItem(\"list\");\n    const loadedlist = JSON.parse(json);\n    if (loadedlist) {\n      setList(loadedlist);\n    }\n  }, []);\n\n  useEffect(() => {\n    const json = JSON.stringify(list);\n    localStorage.setItem(\"list\", json);\n  }, [list]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const newTodo = {\n      id: new Date().getTime(),\n      text: todo,\n      completed: false,\n    };\n    setList([...list].concat(newTodo));\n    setTodo(\"\");\n  }\n\n  function deleteTodo(id) {\n    let updatedlist = [...list].filter((todo) => todo.id !== id);\n    setList(updatedlist);\n  }\n\n  function toggleComplete(id) {\n    let updatedlist = [...list].map((todo) => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n      return todo;\n    });\n    setList(updatedlist);\n  }\n\n  function submitEdits(id) {\n    const updatedlist = [...list].map((todo) => {\n      if (todo.id === id) {\n        todo.text = editingText;\n      }\n      return todo;\n    });\n    setList(updatedlist);\n    setTodoEditing(null);\n  }\n\n  return (\n    <div id=\"todo-list\">\n      <h1>Todo List</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          onChange={(e) => setTodo(e.target.value)}\n          value={todo}\n        />\n        <button type=\"submit\">Add Todo</button>\n      </form>\n      {list.map((todo) => (\n        <div key={todo.id} className=\"todo\">\n          <div className=\"todo-text\">\n            <input\n              type=\"checkbox\"\n              id=\"completed\"\n              checked={todo.completed}\n              onChange={() => toggleComplete(todo.id)}\n            />\n            {todo.id === todoEditing ? (\n              <input\n                type=\"text\"\n                onChange={(e) => setEditingText(e.target.value)}\n              />\n            ) : (\n              <div>{todo.text}</div>\n            )}\n          </div>\n          <div className=\"todo-actions\">\n            {todo.id === todoEditing ? (\n              <button onClick={() => submitEdits(todo.id)}>Submit Edits</button>\n            ) : (\n              <button onClick={() => setTodoEditing(todo.id)}>Edit</button>\n            )}\n\n            <button onClick={() => deleteTodo(todo.id)}>Delete</button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}